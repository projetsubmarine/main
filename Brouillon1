
from random import randint
dico = {}
'''def dict_submarine_generator(dict_submarine, nb_submarine, submarine_life):
    for element in range(nb_submarine):
        x = randint(0,4)
        y = randint(0,4)
        dico["submarine"+str(element + 1)] = {'health' : submarine_life, 'position': [x,y]}
    return dict_submarine'''

from random import randint

 dico = {​​​​}​​​​

 def dict_submarine_generator(dict_submarine, nb_submarine, submarine_life):

     for element in range(nb_submarine):

         x = randint(0,4)

         y = randint(0,4)

         dico["submarine"+str(element + 1)] = {​​​​'health' : submarine_life, 'position': [x,y]}​​​​

     return dict_submarine

 print(dict_submarine_generator(dico, 4, 2))


for element in range(2):
    list_sonar = dict_submarine['submarine%s' % str(element)]['position']
    print(list_sonar)
    list_sonar = 'list_sonar' + str(element)
    
_______________________________________________________________________________________________________________

from random import randint

dico = {}


def dict_submarine_generator(dict_submarine, nb_submarine, submarine_life):
    for element in range(nb_submarine):
        x = randint(0,4)
        y = randint(0,4)
        dict_submarine["submarine"+str(element)] = {"health" : submarine_life, "position": [x,y]}
    return dico

print(dict_submarine_generator(dico, 4, 2))


for element in range(4):
    list_sonar = dico['submarine%s' % str(element)]['position']
    print(list_sonar)
    list_sonar = 'list_sonar' + str(element)
    
    ________________________________________________________________________________________________________________
    
    
from random import randint

dico = {}


def dict_submarine_generator(dict_submarine, nb_submarine, submarine_life):
    for element in range(nb_submarine):
        x = randint(0,4)
        y = randint(0,4)
        dict_submarine["submarine"+str(element)] = {"health" : submarine_life, "position": [x,y]}
    return dico

print(dict_submarine_generator(dico, 4, 2))


for element in range(4):
    list_sonar = dico['submarine%s' % str(element)]['position']
    print(list_sonar)
    list_sonar = 'list_sonar' + str(element)


#                               code pour changer la valeur de la position

def move_possible(current_position, direction):

    if  direction == 0:
        current_position = current_position
    elif direction == 1 and current_position[1] > 0:
        
        current_position[1] = int(current_position[1])  - 1
    elif direction == 2 and current_position[1] < 4:
        new_position = int(current_position[1])  + 1
        current_position[1] = current_position[new_position]
    elif direction == 3 and current_position[0] < 4:
        new_position = int(current_position[0])  + 1
        current_position[0] = current_position[new_position]
    elif direction == 4 and current_position[0] > 0:
        new_position = int(current_position[0])  - 1
        current_position[0] = current_position[new_position]
    
    return current_position
    #This function needs to be assigned to a variable or nested in a nother then we dont need the return
    
#variable example pour montrere que 1 veut dire vers le haut donc y-1 dans la grille
last_movement = 1

#                                boucle pour changer la position de chaque sous marin en passant a travers le dico 


for element in range(4): #here 4 is going to be replaced with the nb of remaining submarines that are alive
    '''This is the function to set limits and make one mouvement,
    for the direction generator the following applies:
    0 is stay in place
    1 is up
    2 is down
    3 is right
    4 is left
'''

    sub_name = 'submarine%s' % str(element)

    print(sub_name)
    list_position = list(dico[sub_name]['position'])
    print(list_position)
    
    #                         Premiere condition just brouillon pour entree en contact avec un mur our coin faut encore ces possibilites
    
    
    if int(list_position[0]) == 4 or int(list_position[0]) == 0 and int(list_position[1]) == 4 or int(list_position[1]) == 0:
        print('You have hit a wall')
    else:
        chance_move_freeze = randint(0, 1)
        #si 0 il reste sur place si 1 il bouge
        print(chance_move_freeze)
        chance_direction_change = randint(0, 9)
        #0-9 pour calculer la 10% de chance
        direction_generator = randint(0, 4)
        #0-4 pour les 5 directions possibles
       #faut eviter qu'il change de direction et reprenne la meme.
        direction = [0, -1, 1, 1, -1]
        
        print(chance_direction_change)
        print(direction_generator)
        
        #condition pour bouger
        if chance_move_freeze == 1:
            print(list_position)
            #if the chance from 0-9 is 5 then it will chance direction
            if chance_direction_change == 5:
                #Function definie au dessus pour changer la position du sousmarin en fonction de la nouvelle direction.
                move_possible(list_position, direction_generator)
                #this code contains all the updates to the positions possible but requires a final return and an update to the dictonary
                last_movement = direction[direction_generator]
            else:
                # il faudra rajouter dernier mouvement dans le dict
                print(move_possible(list_position, last_movement))   
                #last move doesnt change 
        elif chance_move_freeze == 0:
            print('you have stayed in place')
            last_movement = last_movement
        
            #movement
    
            #nothing because the position stays the same
    
    list_sonar = 'list_sonar' + str(element)

    

    



    


